{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/develop/ReactJS/trello_clone/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { toDoState } from \"./atoms\";\nimport Board from \"./components/Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100vw;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n_c = Wrapper;\nconst Boards = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  width: 100%;\n  gap: 10px;\n`;\n_c2 = Boards;\n\nfunction App() {\n  _s();\n\n  const [toDos, setToDos] = useRecoilState(toDoState);\n\n  const onDragEnd = ({\n    draggableId,\n    destination,\n    source\n  }) => {\n    if (!destination) return; // setToDos((oldToDos) => {\n    //   const copyToDos = [...oldToDos];\n    //   // 1) delete item on source.index\n    //   console.log(\"Delete item on \", source.index);\n    //   console.log(copyToDos);\n    //   copyToDos.splice(source.index, 1);\n    //   console.log(\"Delete item \");\n    //   // 2) Put back the item on the destiantion.index\n    //   console.log(\"put back \", draggableId, \"on \", destination.index);\n    //   copyToDos.splice(destination?.index, 0, draggableId);\n    //   console.log(copyToDos);\n    //   return copyToDos;\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Boards, {\n        children: Object.keys(toDos).map(boardId => /*#__PURE__*/_jsxDEV(Board, {\n          boardId: boardId,\n          toDos: toDos[boardId]\n        }, boardId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5a67h5XNEBDPty+W6+XWtUnHNYw=\", false, function () {\n  return [useRecoilState];\n});\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Boards\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/trello_clone/src/App.tsx"],"names":["DragDropContext","useRecoilState","styled","toDoState","Board","Wrapper","div","Boards","App","toDos","setToDos","onDragEnd","draggableId","destination","source","Object","keys","map","boardId"],"mappings":";;;AAAA,SAASA,eAAT,QAAuD,qBAAvD;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,O;AASN,MAAME,MAAM,GAAGL,MAAM,CAACI,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMC,M;;AAQN,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,cAAc,CAACE,SAAD,CAAxC;;AAEA,QAAMQ,SAAS,GAAG,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,GAAD,KAAsD;AACtE,QAAI,CAACD,WAAL,EAAkB,OADoD,CAGtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAhBD;;AAkBA,sBACE,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAEF,SAA5B;AAAA,2BACE,QAAC,OAAD;AAAA,6BACE,QAAC,MAAD;AAAA,kBACGI,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,GAAnB,CAAwBC,OAAD,iBACtB,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEA,OAAhB;AAAuC,UAAA,KAAK,EAAET,KAAK,CAACS,OAAD;AAAnD,WAA8BA,OAA9B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhCQV,G;UACmBP,c;;;MADnBO,G;AAkCT,eAAeA,GAAf","sourcesContent":["import { DragDropContext, DropResult, Droppable } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { toDoState } from \"./atoms\";\nimport Board from \"./components/Board\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100vw;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Boards = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  width: 100%;\n  gap: 10px;\n`;\n\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n\n  const onDragEnd = ({ draggableId, destination, source }: DropResult) => {\n    if (!destination) return;\n\n    // setToDos((oldToDos) => {\n    //   const copyToDos = [...oldToDos];\n    //   // 1) delete item on source.index\n    //   console.log(\"Delete item on \", source.index);\n    //   console.log(copyToDos);\n    //   copyToDos.splice(source.index, 1);\n    //   console.log(\"Delete item \");\n    //   // 2) Put back the item on the destiantion.index\n    //   console.log(\"put back \", draggableId, \"on \", destination.index);\n    //   copyToDos.splice(destination?.index, 0, draggableId);\n    //   console.log(copyToDos);\n    //   return copyToDos;\n    // });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Wrapper>\n        <Boards>\n          {Object.keys(toDos).map((boardId) => (\n            <Board boardId={boardId} key={boardId} toDos={toDos[boardId]} />\n          ))}\n        </Boards>\n      </Wrapper>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}