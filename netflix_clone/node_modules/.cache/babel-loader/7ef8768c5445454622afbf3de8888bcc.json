{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/develop/ReactJS/netflix_clone/src/Routes/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { getMovies } from \"../api\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  background-color: black;\n`;\n_c = Wrapper;\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = Loader;\nconst Banner = styled.div`\n  height: 100vh;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n`;\n_c3 = Banner;\nconst Title = styled.h2``;\n_c4 = Title;\nconst OverView = styled.p``;\n\nfunction Home() {\n  _s();\n\n  const {\n    data,\n    isLoading\n  } = useQuery([\"movies\", \"nowPlaying\"], getMovies);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Banner, {\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          children: data === null || data === void 0 ? void 0 : data.results[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"0VB955moqGTEiUXXbAcRWgIKjHQ=\", false, function () {\n  return [useQuery];\n});\n\n_c5 = Home;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Loader\");\n$RefreshReg$(_c3, \"Banner\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Home\");","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/netflix_clone/src/Routes/Home.tsx"],"names":["useQuery","getMovies","styled","Wrapper","div","Loader","Banner","Title","h2","OverView","p","Home","data","isLoading","results","title"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAAmCC,SAAnC,QAAoD,QAApD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAGA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA,CAFA;KAAMD,O;AAIN,MAAME,MAAM,GAAGH,MAAM,CAACE,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;MAAMC,M;AAON,MAAMC,MAAM,GAAGJ,MAAM,CAACE,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAME,M;AASN,MAAMC,KAAK,GAAGL,MAAM,CAACM,EAAG,EAAxB;MAAMD,K;AAEN,MAAME,QAAQ,GAAGP,MAAM,CAACQ,CAAE,EAA1B;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBb,QAAQ,CAClC,CAAC,QAAD,EAAW,YAAX,CADkC,EAElCC,SAFkC,CAApC;AAKA,sBACE,QAAC,OAAD;AAAA,cACGY,SAAS,gBACR,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAA,oBAAQD,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEE,OAAN,CAAc,CAAd,EAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAnBQJ,I;UACqBX,Q;;;MADrBW,I;AAqBT,eAAeA,IAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { IGetMoviesResult, IMovie, getMovies } from \"../api\";\nimport styled from \"styled-components\";\nimport { isLineBreak } from \"typescript\";\n\nconst Wrapper = styled.div`\n  background-color: black;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div`\n  height: 100vh;\n  background-color: red;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n`;\n\nconst Title = styled.h2``;\n\nconst OverView = styled.p``;\n\nfunction Home() {\n  const { data, isLoading } = useQuery<IGetMoviesResult>(\n    [\"movies\", \"nowPlaying\"],\n    getMovies\n  );\n\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner>\n            <Title>{data?.results[0].title}</Title>\n          </Banner>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}