{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/develop/ReactJS/trello_clone/src/components/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport { Droppable } from \"react-beautiful-dnd\";\nimport DraggableCard from \"./DraggableCard\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 300px;\n  padding-top: 10px;\n  background-color: ${props => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Wrapper;\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n_c2 = Title;\nconst Area = styled.div`\n  background-color: ${props => props.isDraggingOver ? \"#dfe6e9\" : props.isDraggingFromThis ? \"#b2bec3\" : \"transparent\"};\n  flex-grow: 1;\n  transition: background-color 0.2s ease-in-out;\n  padding: 20px;\n`;\n_c3 = Area;\nconst Form = styled.form`\n  width: 100%;\n`;\n_c4 = Form;\n\nfunction Board({\n  toDos,\n  boardId\n}) {\n  _s();\n\n  const {\n    register,\n    setValue,\n    handleSubmit\n  } = useForm();\n\n  const onValid = data => {};\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: boardId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onValid),\n      children: /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"toDo\", {\n          required: true\n        }),\n        type: \"text\",\n        placeholder: `Add task on ${boardId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: boardId,\n      children: (magic, snapshot) => /*#__PURE__*/_jsxDEV(Area, {\n        isDraggingOver: snapshot.isDraggingOver,\n        isDraggingFromThis: Boolean(snapshot.draggingFromThisWith),\n        ref: magic.innerRef,\n        ...magic.droppableProps,\n        children: [toDos.map((toDo, index) => /*#__PURE__*/_jsxDEV(DraggableCard, {\n          index: index,\n          toDo: toDo\n        }, toDo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)), magic.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"tYkMlstWbJsegBg3/UjSvUCb8k4=\", false, function () {\n  return [useForm];\n});\n\n_c5 = Board;\nexport default _c6 = /*#__PURE__*/React.memo(Board);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Area\");\n$RefreshReg$(_c4, \"Form\");\n$RefreshReg$(_c5, \"Board\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/trello_clone/src/components/Board.tsx"],"names":["Droppable","DraggableCard","React","styled","useForm","Wrapper","div","props","theme","boardColor","Title","h2","Area","isDraggingOver","isDraggingFromThis","Form","form","Board","toDos","boardId","register","setValue","handleSubmit","onValid","data","required","magic","snapshot","Boolean","draggingFromThisWith","innerRef","droppableProps","map","toDo","index","placeholder","memo"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;AAC3B;AACA;AACA,sBAAuBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,UAAW;AACxD;AACA;AACA;AACA;AACA,CARA;KAAMJ,O;AAUN,MAAMK,KAAK,GAAGP,MAAM,CAACQ,EAAG;AACxB;AACA;AACA;AACA;AACA,CALA;MAAMD,K;AAON,MAAME,IAAI,GAAGT,MAAM,CAACG,GAAgB;AACpC,sBAAuBC,KAAD,IAClBA,KAAK,CAACM,cAAN,GACI,SADJ,GAEIN,KAAK,CAACO,kBAAN,GACA,SADA,GAEA,aAAc;AACtB;AACA;AACA;AACA,CAVA;MAAMF,I;AAYN,MAAMG,IAAI,GAAGZ,MAAM,CAACa,IAAK;AACzB;AACA,CAFA;MAAMD,I;;AAkBN,SAASE,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAgD;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAuClB,OAAO,EAApD;;AACA,QAAMmB,OAAO,GAAIC,IAAD,IAAiB,CAAE,CAAnC;;AACA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,KAAD;AAAA,gBAAQL;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEG,YAAY,CAACC,OAAD,CAA5B;AAAA,6BACE,sBACMH,QAAQ,CAAC,MAAD,EAAS;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAAT,CADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAG,eAAcN,OAAQ;AAHtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEA,OAAxB;AAAA,gBACG,CAACO,KAAD,EAAQC,QAAR,kBACC,QAAC,IAAD;AACE,QAAA,cAAc,EAAEA,QAAQ,CAACd,cAD3B;AAEE,QAAA,kBAAkB,EAAEe,OAAO,CAACD,QAAQ,CAACE,oBAAV,CAF7B;AAGE,QAAA,GAAG,EAAEH,KAAK,CAACI,QAHb;AAAA,WAIMJ,KAAK,CAACK,cAJZ;AAAA,mBAMGb,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,aAAD;AAA0B,UAAA,KAAK,EAAEA,KAAjC;AAAwC,UAAA,IAAI,EAAED;AAA9C,WAAoBA,IAApB;AAAA;AAAA;AAAA;AAAA,gBADD,CANH,EASGP,KAAK,CAACS,WATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA9BQlB,K;UACsCb,O;;;MADtCa,K;AAgCT,kCAAef,KAAK,CAACkC,IAAN,CAAWnB,KAAX,CAAf","sourcesContent":["import { Droppable } from \"react-beautiful-dnd\";\nimport DraggableCard from \"./DraggableCard\";\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\n\nconst Wrapper = styled.div`\n  width: 300px;\n  padding-top: 10px;\n  background-color: ${(props) => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n\nconst Area = styled.div<IAreaProps>`\n  background-color: ${(props) =>\n    props.isDraggingOver\n      ? \"#dfe6e9\"\n      : props.isDraggingFromThis\n      ? \"#b2bec3\"\n      : \"transparent\"};\n  flex-grow: 1;\n  transition: background-color 0.2s ease-in-out;\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n`;\n\ninterface IBoardProps {\n  toDos: string[];\n  boardId: string;\n}\n\ninterface IAreaProps {\n  isDraggingFromThis: boolean;\n  isDraggingOver: boolean;\n}\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction Board({ toDos, boardId }: IBoardProps) {\n  const { register, setValue, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {};\n  return (\n    <Wrapper>\n      <Title>{boardId}</Title>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <input\n          {...register(\"toDo\", { required: true })}\n          type=\"text\"\n          placeholder={`Add task on ${boardId}`}\n        />\n      </Form>\n      <Droppable droppableId={boardId}>\n        {(magic, snapshot) => (\n          <Area\n            isDraggingOver={snapshot.isDraggingOver}\n            isDraggingFromThis={Boolean(snapshot.draggingFromThisWith)}\n            ref={magic.innerRef}\n            {...magic.droppableProps}\n          >\n            {toDos.map((toDo, index) => (\n              <DraggableCard key={toDo} index={index} toDo={toDo} />\n            ))}\n            {magic.placeholder}\n          </Area>\n        )}\n      </Droppable>\n    </Wrapper>\n  );\n}\n\nexport default React.memo(Board);\n"]},"metadata":{},"sourceType":"module"}