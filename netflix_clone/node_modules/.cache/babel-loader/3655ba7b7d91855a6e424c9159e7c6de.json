{"ast":null,"code":"import { atom, selector } from \"recoil\";\nvar Categories;\n\n(function (Categories) {\n  Categories[Categories[\"TO_DO\"] = 0] = \"TO_DO\";\n  Categories[Categories[\"DOING\"] = 1] = \"DOING\";\n  Categories[Categories[\"DONE\"] = 2] = \"DONE\";\n})(Categories || (Categories = {}));\n\nexport const toDoState = atom({\n  key: \"toDo\",\n  default: []\n});\nexport const categoryState = atom({\n  key: \"category\",\n  default: \"TO_DO\"\n});\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({\n    get\n  }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter(toDo => toDo.category === category);\n  }\n});","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/todo_list/src/atoms.tsx"],"names":["atom","selector","Categories","toDoState","key","default","categoryState","toDoSelector","get","toDos","category","filter","toDo"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;IAEKC,U;;WAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;GAAAA,U,KAAAA,U;;AAYL,OAAO,MAAMC,SAAS,GAAGH,IAAI,CAAU;AACrCI,EAAAA,GAAG,EAAE,MADgC;AAErCC,EAAAA,OAAO,EAAE;AAF4B,CAAV,CAAtB;AAKP,OAAO,MAAMC,aAAa,GAAGN,IAAI,CAAa;AAC5CI,EAAAA,GAAG,EAAE,UADuC;AAE5CC,EAAAA,OAAO,EAAE;AAFmC,CAAb,CAA1B;AAKP,OAAO,MAAME,YAAY,GAAGN,QAAQ,CAAC;AACnCG,EAAAA,GAAG,EAAE,cAD8B;AAEnCI,EAAAA,GAAG,EAAE,CAAC;AAAEA,IAAAA;AAAF,GAAD,KAAa;AAChB,UAAMC,KAAK,GAAGD,GAAG,CAACL,SAAD,CAAjB;AACA,UAAMO,QAAQ,GAAGF,GAAG,CAACF,aAAD,CAApB;AACA,WAAOG,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,QAAL,KAAkBA,QAAzC,CAAP;AACD;AANkC,CAAD,CAA7B","sourcesContent":["import { atom, selector } from \"recoil\";\n\nenum Categories {\n  \"TO_DO\",\n  \"DOING\",\n  \"DONE\",\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: categories;\n}\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nexport const categoryState = atom<categories>({\n  key: \"category\",\n  default: \"TO_DO\",\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}