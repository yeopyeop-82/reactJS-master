{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/develop/ReactJS/todo_list/src/components/ToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSetRecoilState } from \"recoil\";\nimport { toDoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDo({\n  text,\n  category,\n  id\n}) {\n  _s();\n\n  const setToDos = useSetRecoilState(toDoState);\n\n  const onClick = event => {\n    const {\n      currentTarget: {\n        name\n      }\n    } = event;\n    setToDos(oldToDos => {\n      const targetIndex = oldToDos.findIndex(toDo => toDo.id === id); // target의 경로를 찾는다.\n\n      const oldToDo = oldToDos[targetIndex];\n      const newToDo = {\n        text\n      };\n      console.log(targetIndex);\n      return oldToDos;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), category !== \"TO_DO\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"TO_DO\",\n      onClick: onClick,\n      children: \"To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), category !== \"DOING\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"DOING\",\n      onClick: onClick,\n      children: \"Doing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), category !== \"DONE\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"DONE\",\n      onClick: onClick,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDo, \"BR93yBPF8CYIHT/jsK8zidf9OVI=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/todo_list/src/components/ToDo.tsx"],"names":["useSetRecoilState","toDoState","ToDo","text","category","id","setToDos","onClick","event","currentTarget","name","oldToDos","targetIndex","findIndex","toDo","oldToDo","newToDo","console","log"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,QAAlC;AACA,SAAgBC,SAAhB,QAAiC,UAAjC;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAd,EAA6C;AAAA;;AAC3C,QAAMC,QAAQ,GAAGN,iBAAiB,CAACC,SAAD,CAAlC;;AACA,QAAMM,OAAO,GAAIC,KAAD,IAAgD;AAC9D,UAAM;AACJC,MAAAA,aAAa,EAAE;AAAEC,QAAAA;AAAF;AADX,QAEFF,KAFJ;AAGAF,IAAAA,QAAQ,CAAEK,QAAD,IAAc;AACrB,YAAMC,WAAW,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAzC,CAApB,CADqB,CAC6C;;AAClE,YAAMU,OAAO,GAAGJ,QAAQ,CAACC,WAAD,CAAxB;AACA,YAAMI,OAAO,GAAG;AACdb,QAAAA;AADc,OAAhB;AAGAc,MAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACA,aAAOD,QAAP;AACD,KARO,CAAR;AASD,GAbD;;AAcA,sBACE;AAAA,4BACE;AAAA,gBAAOR;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,QAAQ,KAAK,OAAb,iBACC;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,OAAO,EAAEG,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGH,QAAQ,KAAK,OAAb,iBACC;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,OAAO,EAAEG,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EAYGH,QAAQ,KAAK,MAAb,iBACC;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAEG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GApCQL,I;UACUF,iB;;;KADVE,I;AAsCT,eAAeA,IAAf","sourcesContent":["import { useSetRecoilState } from \"recoil\";\nimport { IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id); // target의 경로를 찾는다.\n      const oldToDo = oldToDos[targetIndex];\n      const newToDo = {\n        text,\n      };\n      console.log(targetIndex);\n      return oldToDos;\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== \"TO_DO\" && (\n        <button name=\"TO_DO\" onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== \"DOING\" && (\n        <button name=\"DOING\" onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== \"DONE\" && (\n        <button name=\"DONE\" onClick={onClick}>\n          Done\n        </button>\n      )}\n    </li>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}