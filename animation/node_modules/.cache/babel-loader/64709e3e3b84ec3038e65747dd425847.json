{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/develop/ReactJS/trello_clone/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { toDoState } from \"./atoms\";\nimport DraggableCard from \"./components/DraggableCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 480px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n_c = Wrapper;\nconst Boards = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(3, 1fr);\n`;\n_c2 = Boards;\nconst Board = styled.div`\n  padding: 20px 10px;\n  padding-top: 30px;\n  background-color: ${props => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 200px;\n`;\n_c3 = Board;\n\nfunction App() {\n  _s();\n\n  const [toDos, setToDos] = useRecoilState(toDoState);\n\n  const onDragEnd = ({\n    draggableId,\n    destination,\n    source\n  }) => {\n    if (!destination) return;\n    setToDos(oldToDos => {\n      const copyToDos = [...oldToDos]; // 1) delete item on source.index\n\n      console.log(\"Delete item on \", source.index);\n      console.log(copyToDos);\n      copyToDos.splice(source.index, 1);\n      console.log(\"Delete item \"); // 2) Put back the item on the destiantion.index\n\n      console.log(\"put back \", draggableId, \"on \", destination.index);\n      copyToDos.splice(destination === null || destination === void 0 ? void 0 : destination.index, 0, draggableId);\n      console.log(copyToDos);\n      return copyToDos;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Boards, {\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"one\",\n          children: magic => /*#__PURE__*/_jsxDEV(Board, {\n            ref: magic.innerRef,\n            ...magic.droppableProps,\n            children: [toDos.map((toDo, index) => /*#__PURE__*/_jsxDEV(DraggableCard, {\n              index: index,\n              toDo: toDo\n            }, toDo, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)), magic.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5a67h5XNEBDPty+W6+XWtUnHNYw=\", false, function () {\n  return [useRecoilState];\n});\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Boards\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/trello_clone/src/App.tsx"],"names":["DragDropContext","Droppable","useRecoilState","styled","toDoState","DraggableCard","Wrapper","div","Boards","Board","props","theme","boardColor","App","toDos","setToDos","onDragEnd","draggableId","destination","source","oldToDos","copyToDos","console","log","index","splice","magic","innerRef","droppableProps","map","toDo","placeholder"],"mappings":";;;AAAA,SACEA,eADF,EAIEC,SAJF,QAKO,qBALP;AAMA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,O;AAUN,MAAME,MAAM,GAAGL,MAAM,CAACI,GAAI;AAC1B;AACA;AACA;AACA,CAJA;MAAMC,M;AAMN,MAAMC,KAAK,GAAGN,MAAM,CAACI,GAAI;AACzB;AACA;AACA,sBAAuBG,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,UAAW;AACxD;AACA;AACA,CANA;MAAMH,K;;AAQN,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,cAAc,CAACE,SAAD,CAAxC;;AAEA,QAAMY,SAAS,GAAG,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,GAAD,KAAsD;AACtE,QAAI,CAACD,WAAL,EAAkB;AAElBH,IAAAA,QAAQ,CAAEK,QAAD,IAAc;AACrB,YAAMC,SAAS,GAAG,CAAC,GAAGD,QAAJ,CAAlB,CADqB,CAErB;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,MAAM,CAACK,KAAtC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAA,MAAAA,SAAS,CAACI,MAAV,CAAiBN,MAAM,CAACK,KAAxB,EAA+B,CAA/B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EANqB,CAOrB;;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,WAAzB,EAAsC,KAAtC,EAA6CC,WAAW,CAACM,KAAzD;AACAH,MAAAA,SAAS,CAACI,MAAV,CAAiBP,WAAjB,aAAiBA,WAAjB,uBAAiBA,WAAW,CAAEM,KAA9B,EAAqC,CAArC,EAAwCP,WAAxC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,aAAOA,SAAP;AACD,KAZO,CAAR;AAaD,GAhBD;;AAkBA,sBACE,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAEL,SAA5B;AAAA,2BACE,QAAC,OAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,WAAW,EAAC,KAAvB;AAAA,oBACIU,KAAD,iBACC,QAAC,KAAD;AAAO,YAAA,GAAG,EAAEA,KAAK,CAACC,QAAlB;AAAA,eAAgCD,KAAK,CAACE,cAAtC;AAAA,uBACGd,KAAK,CAACe,GAAN,CAAU,CAACC,IAAD,EAAON,KAAP,kBACT,QAAC,aAAD;AAA0B,cAAA,KAAK,EAAEA,KAAjC;AAAwC,cAAA,IAAI,EAAEM;AAA9C,eAAoBA,IAApB;AAAA;AAAA;AAAA;AAAA,oBADD,CADH,EAIGJ,KAAK,CAACK,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAvCQlB,G;UACmBX,c;;;MADnBW,G;AAyCT,eAAeA,GAAf","sourcesContent":["import {\n  DragDropContext,\n  Draggable,\n  DropResult,\n  Droppable,\n} from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { toDoState } from \"./atoms\";\nimport DraggableCard from \"./components/DraggableCard\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 480px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Boards = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nconst Board = styled.div`\n  padding: 20px 10px;\n  padding-top: 30px;\n  background-color: ${(props) => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 200px;\n`;\n\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n\n  const onDragEnd = ({ draggableId, destination, source }: DropResult) => {\n    if (!destination) return;\n\n    setToDos((oldToDos) => {\n      const copyToDos = [...oldToDos];\n      // 1) delete item on source.index\n      console.log(\"Delete item on \", source.index);\n      console.log(copyToDos);\n      copyToDos.splice(source.index, 1);\n      console.log(\"Delete item \");\n      // 2) Put back the item on the destiantion.index\n      console.log(\"put back \", draggableId, \"on \", destination.index);\n      copyToDos.splice(destination?.index, 0, draggableId);\n      console.log(copyToDos);\n      return copyToDos;\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Wrapper>\n        <Boards>\n          <Droppable droppableId=\"one\">\n            {(magic) => (\n              <Board ref={magic.innerRef} {...magic.droppableProps}>\n                {toDos.map((toDo, index) => (\n                  <DraggableCard key={toDo} index={index} toDo={toDo} />\n                ))}\n                {magic.placeholder}\n              </Board>\n            )}\n          </Droppable>\n        </Boards>\n      </Wrapper>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}