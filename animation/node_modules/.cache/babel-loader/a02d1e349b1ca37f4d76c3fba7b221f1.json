{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/\\u1100\\u1162\\u1107\\u1161\\u11AF\\u1100\\u1169\\u11BC\\u1107\\u116E/ReactJS/todo_list/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart({\n  coinId\n}) {\n  _s();\n\n  var _data$map;\n\n  const isDark = useRecoilValue(isDarkAtom);\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"line\",\n      series: [{\n        name: \"Price\",\n        data: (_data$map = data === null || data === void 0 ? void 0 : data.map(price => parseFloat(price.close))) !== null && _data$map !== void 0 ? _data$map : []\n      }],\n      options: {\n        theme: {\n          mode: isDark ? \"dark\" : \"light\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisTicks: {\n            show: false\n          },\n          axisBorder: {\n            show: false\n          },\n          labels: {\n            show: false\n          }\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            gradientToColors: [\"blue\"],\n            stops: [0, 100]\n          }\n        },\n        colors: [\"red\"],\n        tooltip: {\n          y: {\n            formatter: value => `$ ${value.toFixed(1)}`\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"bleqMRtH3XPEhT+q+Wl7SrTbIX4=\", false, function () {\n  return [useRecoilValue, useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/mac/Documents/개발공부/ReactJS/todo_list/src/routes/Chart.tsx"],"names":["useQuery","fetchCoinHistory","ApexChart","useRecoilValue","isDarkAtom","Chart","coinId","isDark","isLoading","data","name","map","price","parseFloat","close","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisTicks","axisBorder","labels","fill","type","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,UAAT,QAA2B,UAA3B;;;AAkBA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAuC;AAAA;;AAAA;;AACrC,QAAMC,MAAM,GAAGJ,cAAc,CAACC,UAAD,CAA7B;AACA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBT,QAAQ,CAClC,CAAC,OAAD,EAAUM,MAAV,CADkC,EAElC,MAAML,gBAAgB,CAACK,MAAD,CAFY,CAApC;AAIA,sBACE;AAAA,cACGE,SAAS,GACR,kBADQ,gBAGR,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,MAAM,EAAE,CACN;AACEE,QAAAA,IAAI,EAAE,OADR;AAEED,QAAAA,IAAI,eAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAWC,KAAD,IAAWC,UAAU,CAACD,KAAK,CAACE,KAAP,CAA/B,CAAF,iDAAmD;AAFzD,OADM,CAFV;AAQE,MAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAET,MAAM,GAAG,MAAH,GAAY;AADnB,SADA;AAIPU,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,GADH;AAELC,UAAAA,KAAK,EAAE,GAFF;AAGLC,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE;AADC,WAHJ;AAMLC,UAAAA,UAAU,EAAE;AANP,SAJA;AAYPC,QAAAA,IAAI,EAAE;AACJF,UAAAA,IAAI,EAAE;AADF,SAZC;AAePG,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,QADD;AAENN,UAAAA,KAAK,EAAE;AAFD,SAfD;AAmBPO,QAAAA,KAAK,EAAE;AACLL,UAAAA,IAAI,EAAE;AADD,SAnBA;AAsBPM,QAAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE;AACTP,YAAAA,IAAI,EAAE;AADG,WADN;AAILQ,UAAAA,UAAU,EAAE;AACVR,YAAAA,IAAI,EAAE;AADI,WAJP;AAOLS,UAAAA,MAAM,EAAE;AACNT,YAAAA,IAAI,EAAE;AADA;AAPH,SAtBA;AAiCPU,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE,UADF;AAEJC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,gBAAgB,EAAE,CAAC,MAAD,CADV;AAERC,YAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ;AAFC;AAFN,SAjCC;AAwCPC,QAAAA,MAAM,EAAE,CAAC,KAAD,CAxCD;AAyCPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,CAAC,EAAE;AACDC,YAAAA,SAAS,EAAGC,KAAD,IAAY,KAAIA,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AAD3C;AADI;AAzCF;AARX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgED;;GAtEQpC,K;UACQF,c,EACaH,Q;;;KAFrBK,K;AAwET,eAAeA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistrocalData {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistrocalData[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => parseFloat(price.close)) ?? [],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? \"dark\" : \"light\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: {\n              show: false,\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisTicks: {\n                show: false,\n              },\n              axisBorder: {\n                show: false,\n              },\n              labels: {\n                show: false,\n              },\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: {\n                gradientToColors: [\"blue\"],\n                stops: [0, 100],\n              },\n            },\n            colors: [\"red\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$ ${value.toFixed(1)}`,\n              },\n            },\n          }}\n        ></ApexChart>\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}