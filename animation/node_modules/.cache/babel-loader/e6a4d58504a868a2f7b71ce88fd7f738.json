{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/develop/ReactJS/trello_clone/src/components/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport { Droppable } from \"react-beautiful-dnd\";\nimport DraggableCard from \"./DraggableCard\";\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 300px;\n  padding-top: 10px;\n  background-color: ${props => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Wrapper;\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n_c2 = Title;\nconst Area = styled.div`\n  background-color: ${props => props.isDraggingOver ? \"#dfe6e9\" : props.isDraggingFromThis ? \"#b2bec3\" : \"transparent\"};\n  flex-grow: 1;\n  transition: background-color 0.2s ease-in-out;\n  padding: 20px;\n`;\n_c3 = Area;\n\nfunction Board({\n  toDos,\n  boardId\n}) {\n  _s();\n\n  const inputRef = useRef(null);\n\n  const onClick = () => {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: boardId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      placeholder: \"grap me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: boardId,\n      children: (magic, snapshot) => /*#__PURE__*/_jsxDEV(Area, {\n        isDraggingOver: snapshot.isDraggingOver,\n        isDraggingFromThis: Boolean(snapshot.draggingFromThisWith),\n        ref: magic.innerRef,\n        ...magic.droppableProps,\n        children: [toDos.map((toDo, index) => /*#__PURE__*/_jsxDEV(DraggableCard, {\n          index: index,\n          toDo: toDo\n        }, toDo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)), magic.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c4 = Board;\nexport default _c5 = /*#__PURE__*/React.memo(Board);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Area\");\n$RefreshReg$(_c4, \"Board\");\n$RefreshReg$(_c5, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/trello_clone/src/components/Board.tsx"],"names":["Droppable","DraggableCard","React","useRef","styled","Wrapper","div","props","theme","boardColor","Title","h2","Area","isDraggingOver","isDraggingFromThis","Board","toDos","boardId","inputRef","onClick","current","focus","magic","snapshot","Boolean","draggingFromThisWith","innerRef","droppableProps","map","toDo","index","placeholder","memo"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA,sBAAuBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,UAAW;AACxD;AACA;AACA;AACA;AACA,CARA;KAAMJ,O;AAUN,MAAMK,KAAK,GAAGN,MAAM,CAACO,EAAG;AACxB;AACA;AACA;AACA;AACA,CALA;MAAMD,K;AAON,MAAME,IAAI,GAAGR,MAAM,CAACE,GAAgB;AACpC,sBAAuBC,KAAD,IAClBA,KAAK,CAACM,cAAN,GACI,SADJ,GAEIN,KAAK,CAACO,kBAAN,GACA,SADA,GAEA,aAAc;AACtB;AACA;AACA;AACA,CAVA;MAAMF,I;;AAsBN,SAASG,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAgD;AAAA;;AAC9C,QAAMC,QAAQ,GAAGf,MAAM,CAAmB,IAAnB,CAAvB;;AACA,QAAMgB,OAAO,GAAG,MAAM;AAAA;;AACpB,yBAAAD,QAAQ,CAACE,OAAT,wEAAkBC,KAAlB;AACD,GAFD;;AAIA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,KAAD;AAAA,gBAAQJ;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAEC,QAAZ;AAAsB,MAAA,WAAW,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEF,OAAxB;AAAA,gBACG,CAACK,KAAD,EAAQC,QAAR,kBACC,QAAC,IAAD;AACE,QAAA,cAAc,EAAEA,QAAQ,CAACV,cAD3B;AAEE,QAAA,kBAAkB,EAAEW,OAAO,CAACD,QAAQ,CAACE,oBAAV,CAF7B;AAGE,QAAA,GAAG,EAAEH,KAAK,CAACI,QAHb;AAAA,WAIMJ,KAAK,CAACK,cAJZ;AAAA,mBAMGX,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,aAAD;AAA0B,UAAA,KAAK,EAAEA,KAAjC;AAAwC,UAAA,IAAI,EAAED;AAA9C,WAAoBA,IAApB;AAAA;AAAA;AAAA;AAAA,gBADD,CANH,EASGP,KAAK,CAACS,WATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA5BQhB,K;;MAAAA,K;AA8BT,kCAAeb,KAAK,CAAC8B,IAAN,CAAWjB,KAAX,CAAf","sourcesContent":["import { Droppable } from \"react-beautiful-dnd\";\nimport DraggableCard from \"./DraggableCard\";\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 300px;\n  padding-top: 10px;\n  background-color: ${(props) => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n\nconst Area = styled.div<IAreaProps>`\n  background-color: ${(props) =>\n    props.isDraggingOver\n      ? \"#dfe6e9\"\n      : props.isDraggingFromThis\n      ? \"#b2bec3\"\n      : \"transparent\"};\n  flex-grow: 1;\n  transition: background-color 0.2s ease-in-out;\n  padding: 20px;\n`;\n\ninterface IBoardProps {\n  toDos: string[];\n  boardId: string;\n}\n\ninterface IAreaProps {\n  isDraggingFromThis: boolean;\n  isDraggingOver: boolean;\n}\n\nfunction Board({ toDos, boardId }: IBoardProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const onClick = () => {\n    inputRef.current?.focus();\n  };\n\n  return (\n    <Wrapper>\n      <Title>{boardId}</Title>\n      <input ref={inputRef} placeholder=\"grap me\" />\n      <button onClick={onClick}>click me</button>\n      <Droppable droppableId={boardId}>\n        {(magic, snapshot) => (\n          <Area\n            isDraggingOver={snapshot.isDraggingOver}\n            isDraggingFromThis={Boolean(snapshot.draggingFromThisWith)}\n            ref={magic.innerRef}\n            {...magic.droppableProps}\n          >\n            {toDos.map((toDo, index) => (\n              <DraggableCard key={toDo} index={index} toDo={toDo} />\n            ))}\n            {magic.placeholder}\n          </Area>\n        )}\n      </Droppable>\n    </Wrapper>\n  );\n}\n\nexport default React.memo(Board);\n"]},"metadata":{},"sourceType":"module"}