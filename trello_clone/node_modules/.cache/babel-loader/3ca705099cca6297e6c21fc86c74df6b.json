{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/develop/ReactJS/todo_list/src/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\n/* function ToDoList() {\n  const [todo, setTodo] = useState(\"\");\n  const [toDoError, setToDoError] = useState(\"\");\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setToDoError(\"\");\n    setTodo(value);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (todo.length < 10) {\n      return setToDoError(\"To do should be longer than 10 letters\");\n    }\n    console.log(todo);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} value={todo} placeholder=\"Write a to do\" />\n        <button>Add</button>\n        {toDoError !== \"\" ? toDoError : null}\n      </form>\n    </div>\n  );\n} */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoList() {\n  _s();\n\n  var _errors$email, _errors$firstName, _errors$lastName, _errors$password, _errors$password2, _errors$extraError;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    setError\n  } = useForm({\n    defaultValues: {\n      email: \"@naver.com\"\n    }\n  });\n\n  const onValid = data => {\n    if (data.password1 !== data.password2) {\n      return setError(\"password1\", {\n        message: \"Password are not the same\"\n      }, {\n        shouldFocus: true\n      });\n    }\n\n    setError(\"extraError\", {\n      message: \"INTERNAL SERVER ERROR\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      onSubmit: handleSubmit(onValid),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: \"Email is required\",\n          minLength: {\n            value: 10,\n            message: \"over 10 letters is required\"\n          },\n          pattern: {\n            value: /^[A-Za-z0-9._%+-]+@naver.com$/,\n            message: \"Only @naver.com is allowed\"\n          }\n        }),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n          required: \"Write here\",\n          validate: value => value.includes(\"nico\") ? \"no nicos allowd\" : true,\n          minLength: {\n            value: 1,\n            message: \"Your name is too short\"\n          }\n        }),\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n          minLength: 10\n        }),\n        placeholder: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password1\", {\n          required: \"password is required\",\n          minLength: {\n            value: 5,\n            message: \"Your password is too short\"\n          }\n        }),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_errors$password = errors.password1) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password2\", {\n          required: \"password is required\",\n          minLength: {\n            value: 5,\n            message: \"Your password is too short\"\n          }\n        }),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_errors$password2 = errors.password2) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_errors$extraError = errors.extraError) === null || _errors$extraError === void 0 ? void 0 : _errors$extraError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"kemKKWFrIWStGaddFWLF8f2troA=\", false, function () {\n  return [useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/todo_list/src/ToDoList.tsx"],"names":["useForm","ToDoList","register","handleSubmit","formState","errors","setError","defaultValues","email","onValid","data","password1","password2","message","shouldFocus","display","flexDirection","required","minLength","value","pattern","validate","includes","firstName","lastName","extraError"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n/* function ToDoList() {\n  const [todo, setTodo] = useState(\"\");\n  const [toDoError, setToDoError] = useState(\"\");\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setToDoError(\"\");\n    setTodo(value);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (todo.length < 10) {\n      return setToDoError(\"To do should be longer than 10 letters\");\n    }\n    console.log(todo);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} value={todo} placeholder=\"Write a to do\" />\n        <button>Add</button>\n        {toDoError !== \"\" ? toDoError : null}\n      </form>\n    </div>\n  );\n} */\n\ninterface IForm {\n  email: string;\n  firstName: string;\n  lastName?: string;\n  password1: string;\n  password2: string;\n  extraError?: string;\n}\n\nfunction ToDoList() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setError,\n  } = useForm<IForm>({\n    defaultValues: {\n      email: \"@naver.com\",\n    },\n  });\n  const onValid = (data: IForm) => {\n    if (data.password1 !== data.password2) {\n      return setError(\n        \"password1\",\n        { message: \"Password are not the same\" },\n        { shouldFocus: true }\n      );\n    }\n    setError(\"extraError\", { message: \"INTERNAL SERVER ERROR\" });\n  };\n  return (\n    <div>\n      <form\n        style={{ display: \"flex\", flexDirection: \"column\" }}\n        onSubmit={handleSubmit(onValid)}\n      >\n        <input\n          {...register(\"email\", {\n            required: \"Email is required\",\n            minLength: { value: 10, message: \"over 10 letters is required\" },\n            pattern: {\n              value: /^[A-Za-z0-9._%+-]+@naver.com$/,\n              message: \"Only @naver.com is allowed\",\n            },\n          })}\n          placeholder=\"Email\"\n        />\n        <span>{errors.email?.message}</span>\n        <input\n          {...register(\"firstName\", {\n            required: \"Write here\",\n            validate: (value) =>\n              value.includes(\"nico\") ? \"no nicos allowd\" : true,\n            minLength: { value: 1, message: \"Your name is too short\" },\n          })}\n          placeholder=\"First Name\"\n        />\n        <span>{errors.firstName?.message}</span>\n        <input\n          {...register(\"lastName\", { minLength: 10 })}\n          placeholder=\"Last Name\"\n        />\n        <span>{errors.lastName?.message}</span>\n        <input\n          {...register(\"password1\", {\n            required: \"password is required\",\n            minLength: { value: 5, message: \"Your password is too short\" },\n          })}\n          placeholder=\"Password\"\n        />\n        <span>{errors.password1?.message}</span>\n        <input\n          {...register(\"password2\", {\n            required: \"password is required\",\n            minLength: { value: 5, message: \"Your password is too short\" },\n          })}\n          placeholder=\"Password\"\n        />\n        <span>{errors.password2?.message}</span>\n        <button>Add</button>\n        <span>{errors.extraError?.message}</span>\n      </form>\n    </div>\n  );\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}