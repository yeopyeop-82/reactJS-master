{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/develop/ReactJS/todo_list/src/components/ToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSetRecoilState } from \"recoil\";\nimport { Categories, toDoState } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDo({\n  text,\n  category,\n  id\n}) {\n  _s();\n\n  const setToDos = useSetRecoilState(toDoState);\n\n  const onClick = event => {\n    const {\n      currentTarget: {\n        name\n      }\n    } = event;\n    setToDos(oldToDos => {\n      const targetIndex = oldToDos.findIndex(toDo => toDo.id === id); // target의 경로를 찾는다.\n\n      const newToDo = {\n        text,\n        id,\n        category: name\n      };\n      return [...oldToDos.slice(0, targetIndex), newToDo, ...oldToDos.slice(targetIndex + 1)];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), category !== Categories.TO_DO && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: Categories.TO_DO,\n      onClick: onClick,\n      children: \"To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), category !== Categories.DOING && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"DOING\",\n      onClick: onClick,\n      children: \"Doing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), category !== Categories.DONE && /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"DONE\",\n      onClick: onClick,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDo, \"BR93yBPF8CYIHT/jsK8zidf9OVI=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/todo_list/src/components/ToDo.tsx"],"names":["useSetRecoilState","Categories","toDoState","ToDo","text","category","id","setToDos","onClick","event","currentTarget","name","oldToDos","targetIndex","findIndex","toDo","newToDo","slice","TO_DO","DOING","DONE"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,QAAlC;AACA,SAASC,UAAT,EAA4BC,SAA5B,QAA6C,UAA7C;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAd,EAA6C;AAAA;;AAC3C,QAAMC,QAAQ,GAAGP,iBAAiB,CAACE,SAAD,CAAlC;;AACA,QAAMM,OAAO,GAAIC,KAAD,IAAgD;AAC9D,UAAM;AACJC,MAAAA,aAAa,EAAE;AAAEC,QAAAA;AAAF;AADX,QAEFF,KAFJ;AAGAF,IAAAA,QAAQ,CAAEK,QAAD,IAAc;AACrB,YAAMC,WAAW,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAzC,CAApB,CADqB,CAC6C;;AAClE,YAAMU,OAAO,GAAG;AACdZ,QAAAA,IADc;AAEdE,QAAAA,EAFc;AAGdD,QAAAA,QAAQ,EAAEM;AAHI,OAAhB;AAKA,aAAO,CACL,GAAGC,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkBJ,WAAlB,CADE,EAELG,OAFK,EAGL,GAAGJ,QAAQ,CAACK,KAAT,CAAeJ,WAAW,GAAG,CAA7B,CAHE,CAAP;AAKD,KAZO,CAAR;AAaD,GAjBD;;AAkBA,sBACE;AAAA,4BACE;AAAA,gBAAOT;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,QAAQ,KAAKJ,UAAU,CAACiB,KAAxB,iBACC;AAAQ,MAAA,IAAI,EAAEjB,UAAU,CAACiB,KAAzB;AAAgC,MAAA,OAAO,EAAEV,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGH,QAAQ,KAAKJ,UAAU,CAACkB,KAAxB,iBACC;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,OAAO,EAAEX,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EAYGH,QAAQ,KAAKJ,UAAU,CAACmB,IAAxB,iBACC;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAEZ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAxCQL,I;UACUH,iB;;;KADVG,I;AA0CT,eAAeA,IAAf","sourcesContent":["import { useSetRecoilState } from \"recoil\";\nimport { Categories, IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id); // target의 경로를 찾는다.\n      const newToDo = {\n        text,\n        id,\n        category: name as any,\n      };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== Categories.TO_DO && (\n        <button name={Categories.TO_DO} onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== Categories.DOING && (\n        <button name=\"DOING\" onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.DONE && (\n        <button name=\"DONE\" onClick={onClick}>\n          Done\n        </button>\n      )}\n    </li>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}