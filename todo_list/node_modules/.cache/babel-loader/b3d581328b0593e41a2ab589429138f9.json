{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/develop/ReactJS/todo_list/src/components/ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { atom, useRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toDoState = atom({\n  key: \"toDo\",\n  default: []\n});\n\nfunction ToDoList() {\n  _s();\n\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n\n  const handleSubmitValid = data => {\n    console.log(\"add to do\", data.toDo);\n    setToDos(oldTodos => [{\n      text: data.toDo,\n      category: \"TO_DO\"\n    }, ...oldTodos]);\n    setValue(\"toDo\", \"\");\n  };\n\n  console.log(toDos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleSubmitValid),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"toDo\", {\n          required: \"Write a to do\"\n        }),\n        placeholder: \"Write a To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"T9EIhkA4ETMkuM/tZs/felGzxhM=\", false, function () {\n  return [useRecoilState, useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/mac/Documents/develop/ReactJS/todo_list/src/components/ToDoList.tsx"],"names":["useForm","atom","useRecoilState","toDoState","key","default","ToDoList","toDos","setToDos","register","handleSubmit","setValue","handleSubmitValid","data","console","log","toDo","oldTodos","text","category","required"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqD,QAArD;;AAEA,MAAMC,SAAS,GAAGF,IAAI,CAAU;AAC9BG,EAAAA,GAAG,EAAE,MADyB;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAAV,CAAtB;;AAcA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,cAAc,CAACC,SAAD,CAAxC;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCX,OAAO,EAApD;;AACA,QAAMY,iBAAiB,GAAIC,IAAD,IAAiB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAI,CAACG,IAA9B;AACAR,IAAAA,QAAQ,CAAES,QAAD,IAAc,CACrB;AAAEC,MAAAA,IAAI,EAAEL,IAAI,CAACG,IAAb;AAAmBG,MAAAA,QAAQ,EAAE;AAA7B,KADqB,EAErB,GAAGF,QAFkB,CAAf,CAAR;AAIAN,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR;AACD,GAPD;;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEG,YAAY,CAACE,iBAAD,CAA5B;AAAA,8BACE,sBACMH,QAAQ,CAAC,MAAD,EAAS;AAAEW,UAAAA,QAAQ,EAAE;AAAZ,SAAT,CADd;AAEE,QAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAzBQd,Q;UACmBJ,c,EACmBF,O;;;KAFtCM,Q;AA2BT,eAAeA,QAAf","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { atom, useRecoilState, useRecoilValue } from \"recoil\";\n\nconst toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\ninterface IForm {\n  toDo: string;\n}\n\ninterface IToDo {\n  text: string;\n  category: \"TO_DO\" | \"DOING\" | \"DONE\";\n}\n\nfunction ToDoList() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleSubmitValid = (data: IForm) => {\n    console.log(\"add to do\", data.toDo);\n    setToDos((oldTodos) => [\n      { text: data.toDo, category: \"TO_DO\" },\n      ...oldTodos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n  console.log(toDos);\n  return (\n    <div>\n      <h1>To Do</h1>\n      <hr />\n      <form onSubmit={handleSubmit(handleSubmitValid)}>\n        <input\n          {...register(\"toDo\", { required: \"Write a to do\" })}\n          placeholder=\"Write a To Do\"\n        />\n        <button>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}